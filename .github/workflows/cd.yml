name: cd

on:
  release:
    types:
      - published

permissions:
  id-token: write
  contents: read

jobs:
  publish_to_pypi:
    name: publish to pypi on new release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          pip install requests

      - name: Build and publish main package
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry build
          VERSION=$(poetry version -s)
          python -c "import requests; exit(0) if requests.get(f'https://pypi.org/pypi/pandasai/{VERSION}/json').status_code == 200 else exit(1)" || poetry publish

      - name: Build and publish extensions
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE
          find extensions -name pyproject.toml | while read -r project; do
            dir=$(dirname "$project")
            echo "Building and publishing $dir"
            cd "$dir"
            poetry build
            PACKAGE_NAME=$(poetry version | cut -d' ' -f1)
            VERSION=$(poetry version -s)
            python -c "import requests; exit(0) if requests.get(f'https://pypi.org/pypi/{PACKAGE_NAME}/{VERSION}/json').status_code == 200 else exit(1)" || poetry publish
            cd $GITHUB_WORKSPACE
          done
