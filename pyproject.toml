[tool.poetry]
name = "pandasai"
version = "3.0.0a12"
description = "Chat with your database (SQL, CSV, pandas, mongodb, noSQL, etc). PandasAI makes data analysis conversational using LLMs (GPT 3.5 / 4, Anthropic, VertexAI) and RAG."
authors = ["Gabriele Venturi"]
license = "MIT"
readme = "README.md"
packages = [{include = "pandasai"}]

[tool.poetry.dependencies]
python = ">=3.8,<3.9.7 || >3.9.7,<3.12"
python-dotenv = "^1.0.0"
pandas = "1.5.3"
scipy = "1.10.1"
astor = "^0.8.1"
matplotlib = "^3.7.1"
pydantic = "^2.6.4"
duckdb = "^1.0.0"
pillow = "^10.1.0"
requests = "^2.31.0"
jinja2 = "^3.1.3"
numpy = "^1.17"
beautifulsoup4 = {version="^4.12.2", optional = true}
seaborn = "^0.12.2"
openpyxl = { version = "^3.0.7", optional = true }
flask = { version = "^3.0.2", optional = true }
sqlglot = {extras = ["rs"], version = "^25.0.3"}
transformers = "^4.45.2"
typing-extensions = "^4.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.2"
ruff = "^0.1.0"
codespell = "^2.2.0"
pytest = "^7.3.1"
pytest-mock = "^3.10.0"
pytest-env = "^0.8.1"
click = "^8.1.3"
coverage = "^7.2.7"
sourcery = "^1.11.0"

[tool.poetry.extras]
openai = ["pandasai-openai"]
local = ["pandasai-local"]
bedrock = ["pandasai-bedrock"]
google-ai = ["pandasai-google"]
langchain = ["pandasai-langchain"]
ibm-watsonx-ai = ["pandasai-ibm"]
chromadb = ["pandasai-chromadb"]
lancedb = ["pandasai-lancedb"]
pinecone = ["pandasai-pinecone"]
qdrant = ["pandasai-qdrant"]
milvus = ["pymilvus", "milvus-model"]
sql = ["pandasai-sql"]
oracle = ["pandasai-oracle"]
snowflake = ["pandasai-snowflake"]
databricks = ["pandasai-databricks"]
bigquery = ["pandasai-bigquery"]
yfinance = ["pandasai-yfinance"]
google-sheets = ["beautifulsoup4"]
excel = ["openpyxl"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "1.5.3"
mkdocstrings-python = "1.7.2"
markdown-include = "^0.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = ["tests_*"]

[tool.pytest.ini_options]
env = [
    "OPENAI_API_KEY="
]
